#usda 1.0
(
    customLayerData = {
        string creator = "Needle Engine USDZExporter"
    }
    metersPerUnit = 1
    upAxis = "Y"
    defaultPrim = "Geometry"
)

def "Geometry"

{	
    def Mesh "Geometry" (
        prepend apiSchemas = ["SkelBindingAPI"]
    )
    {
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [2, 1, 0, 3, 2, 0, 3, 0, 4, 5, 2, 3, 6, 3, 4, 6, 4, 7, 8, 5, 3, 8, 3, 6, 9, 5, 8, 10, 6, 7, 10, 7, 11, 12, 9, 8, 13, 9, 12, 14, 8, 6, 14, 6, 10, 12, 8, 14, 15, 10, 11, 15, 11, 16, 17, 14, 10, 17, 10, 15, 18, 12, 14, 18, 14, 17, 19, 13, 12, 19, 12, 18, 20, 15, 16, 20, 16, 21, 22, 17, 15, 22, 15, 20, 23, 18, 17, 23, 17, 22, 24, 20, 21, 24, 21, 25, 26, 22, 20, 26, 20, 24, 27, 24, 25, 27, 25, 28, 29, 27, 28, 30, 24, 27, 30, 26, 24, 31, 27, 29, 31, 30, 27, 32, 31, 29, 33, 22, 26, 33, 23, 22, 34, 18, 23, 34, 19, 18, 35, 26, 30, 35, 33, 26, 36, 30, 31, 36, 35, 30, 37, 31, 32, 37, 36, 31, 38, 37, 32, 39, 23, 33, 39, 34, 23, 40, 33, 35, 40, 39, 33, 41, 35, 36, 41, 40, 35, 42, 37, 38, 43, 42, 38, 43, 44, 42, 45, 36, 37, 42, 45, 37, 45, 41, 36, 44, 46, 42, 42, 46, 45, 44, 47, 46, 45, 48, 41, 46, 48, 45, 41, 49, 40, 48, 49, 41, 40, 50, 39, 49, 50, 40, 46, 51, 48, 47, 51, 46, 48, 52, 49, 51, 52, 48, 52, 53, 49, 53, 52, 51, 49, 53, 50, 51, 47, 53, 50, 54, 39, 39, 54, 34, 53, 55, 50, 47, 55, 53, 50, 55, 54, 54, 56, 34, 34, 56, 19, 47, 57, 55, 57, 47, 58, 55, 59, 54, 54, 59, 56, 57, 59, 55, 56, 60, 19, 60, 57, 58, 19, 60, 13, 60, 58, 13, 57, 61, 59, 59, 61, 56, 61, 57, 60, 56, 61, 60]
        normal3f[] normals = [(-0.7902834, -0.3099042, 0.5285938), (-0.9302656, -0.3668721, -0.003265569), (-0.8514417, -0.5244387, -0.003326555), (-0.7185408, -0.4377893, 0.5404069), (0.01480948, 0.01694502, 0.9997467), (-0.5616956, -0.8273416, -0.001953238), (0.04707024, 0.04636231, 0.9978151), (0.7902957, 0.3258125, 0.5189211), (-0.4590364, -0.6886625, 0.5612749), (0.1050211, -0.9944700, 0.000000), (0.7399191, 0.4395351, 0.5092432), (0.9252574, 0.3793397, -0.0003357066), (0.08746181, -0.7911878, 0.6052870), (0.7063498, -0.7078629, 0.00009155711), (0.08514780, 0.09069739, 0.9922317), (0.8612455, 0.5081890, 0.0001831161), (0.7887672, 0.3282954, -0.5196811), (0.4322806, 0.7452217, 0.5077186), (-0.003272638, 0.1399450, 0.9901538), (0.5556470, -0.5822303, 0.5935187), (0.7394823, 0.4409372, -0.5086652), (-0.001379150, 0.01682187, -0.9998575), (0.4931407, 0.8699497, 0.000000), (-0.1700791, 0.8323186, 0.5275593), (0.03256458, 0.03813634, -0.9987418), (-0.7973300, -0.3093777, -0.5182183), (0.4322806, 0.7452217, -0.5077186), (-0.7261859, -0.4444216, -0.5245411), (-0.9302656, -0.3668721, -0.003265569), (-0.8514417, -0.5244387, -0.003326555), (0.08174130, 0.08552129, -0.9929776), (-0.4610017, -0.6936217, -0.5535038), (-0.5616956, -0.8273416, -0.001953238), (-0.2040157, 0.9789676, 0.000000), (-0.07052348, 0.03338391, 0.9969513), (-0.1700791, 0.8323186, -0.5275593), (-0.003272638, 0.1399450, -0.9901538), (0.08746019, -0.7911732, -0.6053063), (0.1050211, -0.9944700, 0.000000), (-0.5895922, 0.5913239, 0.5501973), (-0.6999075, 0.7142333, 0.00009155766), (-0.5893549, 0.5918648, -0.5498698), (0.5562540, -0.5816602, -0.5935088), (0.7063498, -0.7078629, 0.00009155711), (0.7565784, -0.6539031, -0.0001831145), (-0.07004058, 0.03447870, -0.9969481), (0.6161683, -0.5698186, -0.5437310), (0.02786691, -0.9996117, 0.0001220757), (0.006946458, -0.1326600, -0.9911373), (-0.6214055, 0.5281500, -0.5787165), (-0.7417021, 0.6707295, -0.0001831125), (-0.01425962, -0.9256151, -0.3781976), (-0.4332944, -0.4380343, -0.7876434), (-0.9096906, 0.002843575, -0.4152770), (-0.6213600, 0.5288776, 0.5781005), (-0.9976235, 0.06890001, 0.00009155717), (0.006961549, -0.1325946, 0.9911459), (-0.01402172, -0.9253063, 0.3789612), (0.7565784, -0.6539031, -0.0001831145), (-0.9095895, 0.003561245, 0.4154928), (0.6160584, -0.5704064, 0.5432389), (-0.4332555, -0.4368006, 0.7883495)] (
            interpolation = "vertex"
        )
        point3f[] points = [(-0.01470682, 0.04965916, 0.03121864), (-0.01491680, 0.04958649, 0.03017496), (-0.02933320, 0.08613038, 0.03028437), (-0.02919589, 0.08617788, 0.03096686), (-0.01419988, 0.04983458, 0.03165096), (-0.03057592, 0.08754345, 0.03028437), (-0.02886439, 0.08629261, 0.03124955), (-0.01369294, 0.05001001, 0.03121864), (-0.03052304, 0.08771139, 0.03096686), (-0.03247112, 0.08820225, 0.03028437), (-0.02853290, 0.08640732, 0.03096686), (-0.01348296, 0.05008267, 0.03017496), (-0.03253349, 0.08833752, 0.03096686), (-0.03468328, 0.08679324, 0.03028437), (-0.03039538, 0.08811686, 0.03124955), (-0.02839559, 0.08645484, 0.03028437), (-0.01369294, 0.05001001, 0.02913127), (-0.03026772, 0.08852232, 0.03096686), (-0.03268406, 0.08866405, 0.03124955), (-0.03478754, 0.08690757, 0.03091898), (-0.02853290, 0.08640732, 0.02960188), (-0.01419988, 0.04983458, 0.02869896), (-0.03021484, 0.08869027, 0.03028437), (-0.03283463, 0.08899059, 0.03096686), (-0.02886439, 0.08629261, 0.02931918), (-0.01470682, 0.04965916, 0.02913127), (-0.03026772, 0.08852232, 0.02960188), (-0.02919589, 0.08617788, 0.02964975), (-0.01491680, 0.04958649, 0.03017496), (-0.02933320, 0.08613038, 0.03028437), (-0.03039538, 0.08811686, 0.02931918), (-0.03052304, 0.08771139, 0.02960188), (-0.03057592, 0.08754345, 0.03028437), (-0.03289699, 0.08912585, 0.03028437), (-0.03503926, 0.08718358, 0.03118185), (-0.03283463, 0.08899059, 0.02960188), (-0.03268406, 0.08866405, 0.02931918), (-0.03253349, 0.08833752, 0.02960188), (-0.03247112, 0.08820225, 0.03028437), (-0.03529098, 0.08745958, 0.03091898), (-0.03539524, 0.08757390, 0.03028437), (-0.03529098, 0.08745958, 0.02964975), (-0.03478754, 0.08690757, 0.02964975), (-0.03468328, 0.08679324, 0.03028437), (-0.03620028, 0.08438426, 0.03028033), (-0.03503926, 0.08718358, 0.02938688), (-0.03639467, 0.08437335, 0.02973619), (-0.03919764, 0.08204867, 0.03028437), (-0.03686398, 0.08434699, 0.02951080), (-0.03733329, 0.08432065, 0.02973619), (-0.03752768, 0.08430974, 0.03028033), (-0.03926412, 0.08210844, 0.02988191), (-0.03942461, 0.08225270, 0.02971521), (-0.03958511, 0.08239696, 0.02988191), (-0.03733329, 0.08432065, 0.03082447), (-0.03965160, 0.08245673, 0.03028437), (-0.03686398, 0.08434699, 0.03104986), (-0.03926412, 0.08210844, 0.03068682), (-0.03620028, 0.08438426, 0.03028033), (-0.03958511, 0.08239696, 0.03068682), (-0.03639467, 0.08437335, 0.03082447), (-0.03942461, 0.08225270, 0.03085352)]
        texCoord2f[] primvars:st = [(0.6879234, 0.91779053), (0.6932369, 0.91774678), (0.6924731, 0.7162263), (0.6884832, 0.7164423), (0.6844004, 0.91792881), (0.6928408, 0.7034919), (0.6855071, 0.7170573), (0.6807737, 0.91804546), (0.6883096, 0.7032292), (0.6923964, 0.6899565), (0.6825718, 0.717541), (0.6751789, 0.91803241), (0.6879425, 0.6896346), (0.6932111, 0.6726903), (0.6854286, 0.7025604), (0.6786351, 0.7175937), (0.6695860, 0.91788477), (0.6827032, 0.7019662), (0.6853880, 0.6889742999999999), (0.6889213, 0.6726527), (0.6747009, 0.7173871), (0.6659642, 0.91765654), (0.6789802, 0.7016722), (0.6829581, 0.6883805000000001), (0.6717826, 0.7167877), (0.6624616, 0.91738653), (0.6752488, 0.7018125), (0.6686738, 0.7160621), (0.6571411, 0.91712415), (0.6648308, 0.7156898), (0.6725020, 0.7022923), (0.6696037, 0.702839), (0.6650488, 0.7029187), (0.6792635, 0.6880714), (0.6860562, 0.6727491999999999), (0.6755592, 0.6882261000000001), (0.6731065, 0.6887179999999999), (0.6705261, 0.6892716999999999), (0.6660596, 0.6894078), (0.6833113, 0.6727326), (0.6795895, 0.6726224000000001), (0.6758651, 0.6725695), (0.6702563, 0.6722531), (0.6659642, 0.6721166000000001), (0.6667688, 0.6524639999999999), (0.6731185, 0.6724669), (0.6710445, 0.6526892), (0.6806943, 0.6204524), (0.6738459, 0.6513941999999999), (0.6765692, 0.6497649), (0.6800752, 0.6491969), (0.6777130, 0.6366488), (0.6783110, 0.6380885000000001), (0.6791495, 0.6381454), (0.6835613, 0.6499107), (0.6802986, 0.6378529), (0.6862323, 0.6516641000000001), (0.6830339, 0.6367984), (0.6932368, 0.6530395), (0.6813868, 0.6379531), (0.6889664, 0.6530811999999999), (0.6822891, 0.6380289)] (
            interpolation = "vertex"
        )
		
		matrix4d primvars:skel:geomBindTransform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ) (
				elementSize = 1
				interpolation = "constant"
			)
		int[] primvars:skel:jointIndices = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] (
			elementSize = 4
			interpolation = "vertex"
		)
		float[] primvars:skel:jointWeights
			elementSize = 4
			interpolation = "vertex"
		)
		uniform token[] skel:joints = ["Vibrator", "Vibrator/Vibrator01"]
        uniform token subdivisionScheme = "none"
    }
}

# This is a workaround for QuickLook/RealityKit not supporting the doubleSided attribute. We're adding a second
# geometry definition here, that uses the same mesh data but appends extra faces with reversed winding order.
def "Geometry_doubleSided" (
	prepend references = </Geometry>
)
{
	over "Geometry"
	{
		int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
		int[] faceVertexIndices = [2, 1, 0, 3, 2, 0, 3, 0, 4, 5, 2, 3, 6, 3, 4, 6, 4, 7, 8, 5, 3, 8, 3, 6, 9, 5, 8, 10, 6, 7, 10, 7, 11, 12, 9, 8, 13, 9, 12, 14, 8, 6, 14, 6, 10, 12, 8, 14, 15, 10, 11, 15, 11, 16, 17, 14, 10, 17, 10, 15, 18, 12, 14, 18, 14, 17, 19, 13, 12, 19, 12, 18, 20, 15, 16, 20, 16, 21, 22, 17, 15, 22, 15, 20, 23, 18, 17, 23, 17, 22, 24, 20, 21, 24, 21, 25, 26, 22, 20, 26, 20, 24, 27, 24, 25, 27, 25, 28, 29, 27, 28, 30, 24, 27, 30, 26, 24, 31, 27, 29, 31, 30, 27, 32, 31, 29, 33, 22, 26, 33, 23, 22, 34, 18, 23, 34, 19, 18, 35, 26, 30, 35, 33, 26, 36, 30, 31, 36, 35, 30, 37, 31, 32, 37, 36, 31, 38, 37, 32, 39, 23, 33, 39, 34, 23, 40, 33, 35, 40, 39, 33, 41, 35, 36, 41, 40, 35, 42, 37, 38, 43, 42, 38, 43, 44, 42, 45, 36, 37, 42, 45, 37, 45, 41, 36, 44, 46, 42, 42, 46, 45, 44, 47, 46, 45, 48, 41, 46, 48, 45, 41, 49, 40, 48, 49, 41, 40, 50, 39, 49, 50, 40, 46, 51, 48, 47, 51, 46, 48, 52, 49, 51, 52, 48, 52, 53, 49, 53, 52, 51, 49, 53, 50, 51, 47, 53, 50, 54, 39, 39, 54, 34, 53, 55, 50, 47, 55, 53, 50, 55, 54, 54, 56, 34, 34, 56, 19, 47, 57, 55, 57, 47, 58, 55, 59, 54, 54, 59, 56, 57, 59, 55, 56, 60, 19, 60, 57, 58, 19, 60, 13, 60, 58, 13, 57, 61, 59, 59, 61, 56, 61, 57, 60, 56, 61, 60, 0, 1, 2, 0, 2, 3, 4, 0, 3, 3, 2, 5, 4, 3, 6, 7, 4, 6, 3, 5, 8, 6, 3, 8, 8, 5, 9, 7, 6, 10, 11, 7, 10, 8, 9, 12, 12, 9, 13, 6, 8, 14, 10, 6, 14, 14, 8, 12, 11, 10, 15, 16, 11, 15, 10, 14, 17, 15, 10, 17, 14, 12, 18, 17, 14, 18, 12, 13, 19, 18, 12, 19, 16, 15, 20, 21, 16, 20, 15, 17, 22, 20, 15, 22, 17, 18, 23, 22, 17, 23, 21, 20, 24, 25, 21, 24, 20, 22, 26, 24, 20, 26, 25, 24, 27, 28, 25, 27, 28, 27, 29, 27, 24, 30, 24, 26, 30, 29, 27, 31, 27, 30, 31, 29, 31, 32, 26, 22, 33, 22, 23, 33, 23, 18, 34, 18, 19, 34, 30, 26, 35, 26, 33, 35, 31, 30, 36, 30, 35, 36, 32, 31, 37, 31, 36, 37, 32, 37, 38, 33, 23, 39, 23, 34, 39, 35, 33, 40, 33, 39, 40, 36, 35, 41, 35, 40, 41, 38, 37, 42, 38, 42, 43, 42, 44, 43, 37, 36, 45, 37, 45, 42, 36, 41, 45, 42, 46, 44, 45, 46, 42, 46, 47, 44, 41, 48, 45, 45, 48, 46, 40, 49, 41, 41, 49, 48, 39, 50, 40, 40, 50, 49, 48, 51, 46, 46, 51, 47, 49, 52, 48, 48, 52, 51, 49, 53, 52, 51, 52, 53, 50, 53, 49, 53, 47, 51, 39, 54, 50, 34, 54, 39, 50, 55, 53, 53, 55, 47, 54, 55, 50, 34, 56, 54, 19, 56, 34, 55, 57, 47, 58, 47, 57, 54, 59, 55, 56, 59, 54, 55, 59, 57, 19, 60, 56, 58, 57, 60, 13, 60, 19, 13, 58, 60, 59, 61, 57, 56, 61, 59, 60, 57, 61, 60, 61, 56]
	}
}

